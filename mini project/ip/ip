import cv2
import numpy as np
from object_detection import ObjectDetection
import math

# Initialize Object Detection
od = ObjectDetection()
cap = cv2.VideoCapture("car2.mp4")

# Initialize count
count = 0
center_points_prev_frame = []

tracking_objects = {}
track_id = 0

paused = False  # Flag to indicate whether the video is paused or not

while True:
    if not paused:
        ret, frame = cap.read()
        count += 1
        if not ret:
            break

        # Detect objects on frame
        (class_ids, scores, boxes) = od.detect(frame)
        
        # Point current frame
        center_points_cur_frame = []

        for box in boxes:
            (x, y, w, h) = box
            cx = int((x + x + w)/2)
            cy = int((y + y + h)/2)
            center_points_cur_frame.append((cx, cy))
            cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

        # Object Tracking
        temp_tracking_objects = {}

        for pt in center_points_cur_frame:
            matched = False
            for object_id, pt_prev in tracking_objects.items():
                distance = math.hypot(pt_prev[0] - pt[0], pt_prev[1] - pt[1])
                if distance < 40:
                    temp_tracking_objects[object_id] = pt
                    matched = True
                    break

            if not matched:
                temp_tracking_objects[track_id] = pt
                track_id += 1

        tracking_objects = temp_tracking_objects.copy()

        # Display tracked objects
        for object_id, pt in tracking_objects.items():
            cv2.circle(frame, (pt[0], pt[1]), 5, (0, 0, 255), -1)
            cv2.putText(frame, str(object_id), (pt[0], pt[1] - 7), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 255), 2)

        cv2.imshow("Frame", frame)

    key = cv2.waitKey(1)
    if key == 27:  # Esc key
        break
    elif key == ord('z'):  # 'z' key
        paused = not paused
    elif key == ord('q'):  # 'q' key
        break

cap.release()
cv2.destroyAllWindows()

